runtime: go116
instance_class: F4
service: default

# Currently optimised for the backend. If frontend latency becomes
# an issue, we can split backend into a separate service.
automatic_scaling:
  target_throughput_utilization: 0.90
  target_cpu_utilization: 0.90
  max_concurrent_requests: 50

# Note: this is interpreted by gae.py, it maps the app ID being deployed to
# values of ${...} vars.
# Reference: https://chromium.googlesource.com/infra/luci/luci-go/+/HEAD/examples/appengine/helloworld_v2/app.yaml
#
# This configuration is only used for developer testing. The
# configuration used for development and production instances is
# contained in the infradata/gae repo. Refer to LUCI GAE Automatic
# Deployment for more (go/luci/how_to_deploy.md) (Googlers only).
luci_gae_vars:
  chops-weetbix-dev:
    AUTH_SERVICE_HOST: chrome-infra-auth-dev.appspot.com
    CONFIG_SERVICE_HOST: luci-config.appspot.com
    TS_MON_ACCOUNT: app-engine-metric-publishers@prodx-mon-chrome-infra.google.com.iam.gserviceaccount.com
    OAUTH_CLIENT_ID: 736503773201-aq5uttdlcibgrs26jrtd3r40ft2moc9i.apps.googleusercontent.com
    OAUTH_CLIENT_SECRET: sm://oauth-client-secret
    OAUTH_REDIRECT_URL: https://chops-weetbix-dev.appspot.com/auth/openid/callback
    ROOT_SECRET: sm://root-secret
    TINK_AEAD_KEY: sm://tink-aead-primary
    SPANNER_DB: projects/chops-weetbix-dev/instances/dev/databases/chops-weetbix-dev

handlers:
- url: /static
  static_dir: ui/dist
  secure: always

- url: /_ah/push-handlers/.*
  script: auto
  login: admin
  secure: always

- url: /.*
  script: auto
  secure: always

entrypoint: >
  main
  -auth-service-host ${AUTH_SERVICE_HOST}
  -config-service-host ${CONFIG_SERVICE_HOST}
  -ts-mon-account ${TS_MON_ACCOUNT}
  -encrypted-cookies-client-id ${OAUTH_CLIENT_ID}
  -frontend-client-id ${OAUTH_CLIENT_ID}
  -encrypted-cookies-client-secret ${OAUTH_CLIENT_SECRET}
  -encrypted-cookies-redirect-url ${OAUTH_REDIRECT_URL}
  -encrypted-cookies-tink-aead-key ${TINK_AEAD_KEY}
  -root-secret ${ROOT_SECRET}
  -spanner-database ${SPANNER_DB}
